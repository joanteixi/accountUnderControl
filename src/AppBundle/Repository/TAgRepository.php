<?php

namespace AppBundle\Repository;

/**
 * EntryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagRepository extends \DoctrineExtensions\Taggable\Entity\TagRepository
{
    public function getEntries()
    {
        $dql = 'SELECT e FROM AppBundle:Entry e order by e.date desc';

        return $this->getEntityManager()->createQuery($dql);
    }

    public function getEntriesWithoutTags()
    {
        $conn = $this->getEntityManager()->getConnection();

        $sql = 'SELECT e.id, e.concept FROM entry e
                WHERE NOT EXISTS (SELECT t.resource_id FROM tagging t WHERE t.resource_id = e.id)
                ';
        $results = $conn->fetchAll($sql);

        return $results;

    }

    /**
     * Look for a entry with tag.
     *
     * @param $entry
     * @return mixed
     */
    public function matchEntryByNameWithTag($entry)
    {
        $dql = 'SELECT e FROM AppBundle:Entry e
                WHERE e.concept = :concept AND
                e.id != :id';

        $query = $this->getEntityManager()->createQuery($dql);
        $query->setParameter('concept', $entry['concept']);
        $query->setParameter('id', $entry['id']);

        $entryWithTag = $query->setMaxResults(1)->execute();

        if (isset($entryWithTag[0])) {
            $dql = 'SELECT t FROM AppBundle:Tag t
                LEFT JOIN t.tagging tg
                WHERE tg.resourceId = :id';

            $query = $this->getEntityManager()->createQuery($dql);
            $query->setParameter('id', $entryWithTag[0]->getId());

            return $query->execute();
        }
    }

    public function getEntriesInTag($tag)
    {
        $conn = $this->getEntityManager()->getConnection();

        $tagRepo = $this->getEntityManager()->getRepository('DoctrineExtensions\Taggable\Entity:Tag');

        // find all article ids matching a particular query
        $ids = $tagRepo->getResourceIdsForTag('entry_tag', $tag);

        $dql = 'SELECT e FROM AppBundle:Entry e
                WHERE e IN (ids)
                order by e.date desc
        ';

        return $this->getEntityManager()->createQuery($dql);
    }
}
